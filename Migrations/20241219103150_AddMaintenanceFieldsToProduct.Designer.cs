// <auto-generated />
using System;
using FlowerCommerceAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlowerCommerceAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241219103150_AddMaintenanceFieldsToProduct")]
    partial class AddMaintenanceFieldsToProduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlowerCommerceAPI.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CategoryEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CategoryPe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Favorite")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("LightRequirementDetailsEn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LightRequirementDetailsPe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LightRequirementEn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("LightRequirementPe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LightRequirementRecommendationEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LightRequirementRecommendationPe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NamePe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PriceEn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("PricePe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SoilRequirementDetailsEn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SoilRequirementDetailsPe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SoilRequirementEn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SoilRequirementPe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SoilRequirementRecommendationEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoilRequirementRecommendationPe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<decimal?>("TemperatureRequirementDetailsEn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TemperatureRequirementDetailsPe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TemperatureRequirementEn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("TemperatureRequirementPe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TemperatureRequirementRecommendationEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemperatureRequirementRecommendationPe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypePe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("WaterRequirementDetailsEn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("WaterRequirementDetailsPe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("WaterRequirementEn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("WaterRequirementPe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WaterRequirementRecommendationEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaterRequirementRecommendationPe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FlowerCommerceAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsEmailVerified")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FlowerCommerceAPI.Models.WishlistItem", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("WishlistItems");
                });

            modelBuilder.Entity("FlowerCommerceAPI.Models.WishlistItem", b =>
                {
                    b.HasOne("FlowerCommerceAPI.Models.Product", "Product")
                        .WithMany("WishlistedBy")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlowerCommerceAPI.Models.User", "User")
                        .WithMany("Wishlist")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FlowerCommerceAPI.Models.Product", b =>
                {
                    b.Navigation("WishlistedBy");
                });

            modelBuilder.Entity("FlowerCommerceAPI.Models.User", b =>
                {
                    b.Navigation("Wishlist");
                });
#pragma warning restore 612, 618
        }
    }
}
